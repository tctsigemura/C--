/*
 * Programing Language C-- "Compiler"
 *    Tokuyama kousen Educational Computer 16bit Ver.
 *
 * Copyright (C) 2002-2010 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * util.hmm : よく使う関数や定数の定義
 *
 * 2016.02.24         : subStr を追加
 * 2016.01.28         : C 言語から C-- 言語にコンパイラの記述言語を変更
 * 2012.12.30         : error2 を追加
 * 2012.08.14         : WMSK, BMSK の定義を追加
 * 2010.07.20         : Subversion による管理を開始
 * 2010.03.30 v0.9.11 : NOTYPE を nametbl.h からここに移動
 *
 * $Id$
 *
 */

// public の綴りが長いので
#define P public

// ターゲットの有効ビット
#define WMSK ((1<<(NWORD-1)|((1<<(NWORD-1))-1)))   // ワード
#define BMSK ((1<<(NBYTE-1)|((1<<(NBYTE-1))-1)))   // バイト

// 良く使う関数
P boolean strEndsWith(char[] s1, char[] s2);  // 文字列の最後が一致してるか比較
P void error(char[] s);                       // エラーメッセージを表示後終了
P void error2(char[] s1, char[] s2);          // エラーメッセージを表示後終了
P void[] ealloc(int s);                       // エラーチェックつきの malloc
P boolean isDelim(char ch);                   // 区切り記号かテスト
P boolean isOdigit(char ch);                  // 8進数字かテスト
P char[] subStr(char[] str, int pos);         // 文字列の一部を切り出す

#undef P
